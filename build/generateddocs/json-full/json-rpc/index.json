

{
  "itemIdentifier": "mcp.json-rpc",
  "name": "JSON-RPC",
  "highlighted": true,
  "title": "JSON-RPC Ontology and JSON-LD",
  "description": "# JSON-RPC\n\nThis BBlock implements the JSON-RPC specification as reusable ontology and JSON schema linked with a JSON-LD context.\n\n\n## Purpose\n\n- To support a modular descriptions of the Model Context Protocol and any other JSON-RPC based approaches\n\n## Contents\n\n- `schema.json`: JSON schema for the JSON-RPC specification\n- `ontology.ttl`: Ontology terms for the JSON-RPC container objects\n- `bblock.json` / `bblock.yaml`: BBlock registration metadata.\n- `context.jsonld`: JSON-LD context for the RPC model\n- `examples.ttl`:  Register of examples mapped to specific sub-schema elements.\n\n## Status\n\nThere is no official schema for JSON-RPC or the Model Context Protocol that uses it - unofficial schemas tend to bundle the JSON-RPC elements into the MCP schema, which hides the dependencies, reduces re-usability and obscures testing.\n\nNote the JSON-LD enabled of the RPC elements is necessary to build a graph out of a JSON MCP object - it supports RDF identifiers of the object containers, which then allows MCP components to be mapped to RDF models.\n\n## Usage\n\n\n## Validation\n\nValidation of examples is implemented using the JSON schema\n\nAt this stage no additional semantic rules have been defined.",
  "status": "under-development",
  "version": "2.0.0",
  "itemClass": "model",
  "dependsOn": [],
  "rules": [],
  "dateTimeAddition": "2025-06-12T00:00:00Z",
  "dateOfLastChange": "2025-09-05",
  "shaclShapes": {},
  "ldContext": "https://ogcincubator.github.io/modelcontextprotocol/build/annotated/json-rpc/context.jsonld",
  "ontology": "https://ogcincubator.github.io/modelcontextprotocol/build/annotated/json-rpc/ontology.ttl",
  "schema": {
    "application/yaml": "https://ogcincubator.github.io/modelcontextprotocol/build/annotated/json-rpc/schema.yaml",
    "application/json": "https://ogcincubator.github.io/modelcontextprotocol/build/annotated/json-rpc/schema.json"
  },
  "sourceSchema": "https://ogcincubator.github.io/modelcontextprotocol/_sources/json-rpc/schema.json",
  "sourceLdContext": "https://ogcincubator.github.io/modelcontextprotocol/_sources/json-rpc/context.jsonld",
  "sourceFiles": "https://ogcincubator.github.io/modelcontextprotocol/_sources/json-rpc/",
  "rdfData": [],
  "validationPassed": false,
  "testOutputs": "https://github.com/ogcincubator/modelcontextprotocol/blob/master/build/tests/json-rpc/",
  "examples": [
    {
      "title": "Call (positional params)",
      "base-uri": "http://example.com/activities/",
      "prefixes": {
        "mydata": "http://example.com/rpc/"
      },
      "snippets": [
        {
          "language": "json",
          "schema-ref": "#JSONRPCRequest",
          "code": "{\"jsonrpc\": \"2.0\", \"method\": \"subtract\", \"params\": [42, 23], \"id\": \"1\"}\n",
          "url": "https://ogcincubator.github.io/modelcontextprotocol/build/tests/json-rpc/example_1_1.json"
        },
        {
          "language": "jsonld",
          "code": "{\n  \"@context\": [\n    {\n      \"mydata\": \"http://example.com/rpc/\"\n    },\n    \"https://ogcincubator.github.io/modelcontextprotocol/build/annotated/json-rpc/context.jsonld\"\n  ],\n  \"jsonrpc\": \"2.0\",\n  \"method\": \"subtract\",\n  \"params\": [\n    42,\n    23\n  ],\n  \"id\": \"1\"\n}",
          "url": "https://ogcincubator.github.io/modelcontextprotocol/build/tests/json-rpc/example_1_1.jsonld"
        },
        {
          "language": "ttl",
          "code": "@prefix jsonrpc: <http://json-rpc.org/ontology#> .\n@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .\n\n[] jsonrpc: \"2.0\" ;\n    jsonrpc:id \"1\" ;\n    jsonrpc:method \"subtract\" ;\n    jsonrpc:params 23,\n        42 .\n\n",
          "url": "https://ogcincubator.github.io/modelcontextprotocol/build/tests/json-rpc/example_1_1.ttl"
        }
      ]
    },
    {
      "title": "Call (named params)",
      "base-uri": "http://example.com/activities/",
      "prefixes": {
        "mydata": "http://example.com/rpc/"
      },
      "snippets": [
        {
          "language": "json",
          "schema-ref": "#JSONRPCRequest",
          "code": "{\"jsonrpc\": \"2.0\", \"method\": \"subtract\",  \"params\": {\"subtrahend\": 23, \"minuend\": 42}, \"id\": \"1\"}\n",
          "url": "https://ogcincubator.github.io/modelcontextprotocol/build/tests/json-rpc/example_2_1.json"
        },
        {
          "language": "jsonld",
          "code": "{\n  \"@context\": [\n    {\n      \"mydata\": \"http://example.com/rpc/\"\n    },\n    \"https://ogcincubator.github.io/modelcontextprotocol/build/annotated/json-rpc/context.jsonld\"\n  ],\n  \"jsonrpc\": \"2.0\",\n  \"method\": \"subtract\",\n  \"params\": {\n    \"subtrahend\": 23,\n    \"minuend\": 42\n  },\n  \"id\": \"1\"\n}",
          "url": "https://ogcincubator.github.io/modelcontextprotocol/build/tests/json-rpc/example_2_1.jsonld"
        },
        {
          "language": "ttl",
          "code": "@prefix jsonrpc: <http://json-rpc.org/ontology#> .\n@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .\n\n[] jsonrpc: \"2.0\" ;\n    jsonrpc:id \"1\" ;\n    jsonrpc:method \"subtract\" ;\n    jsonrpc:params [ jsonrpc:minuend 42 ;\n            jsonrpc:subtrahend 23 ] .\n\n",
          "url": "https://ogcincubator.github.io/modelcontextprotocol/build/tests/json-rpc/example_2_1.ttl"
        }
      ]
    },
    {
      "title": "Response",
      "base-uri": "http://example.com/activities/",
      "prefixes": {
        "mydata": "http://example.com/rpc/"
      },
      "snippets": [
        {
          "language": "json",
          "schema-ref": "#JSONRPCResponse",
          "code": "{\"jsonrpc\": \"2.0\", \"result\": 19, \"id\": \"1\"}",
          "url": "https://ogcincubator.github.io/modelcontextprotocol/build/tests/json-rpc/example_3_1.json"
        },
        {
          "language": "jsonld",
          "code": "{\n  \"@context\": [\n    {\n      \"mydata\": \"http://example.com/rpc/\"\n    },\n    \"https://ogcincubator.github.io/modelcontextprotocol/build/annotated/json-rpc/context.jsonld\"\n  ],\n  \"jsonrpc\": \"2.0\",\n  \"result\": 19,\n  \"id\": \"1\"\n}",
          "url": "https://ogcincubator.github.io/modelcontextprotocol/build/tests/json-rpc/example_3_1.jsonld"
        },
        {
          "language": "ttl",
          "code": "@prefix jsonrpc: <http://json-rpc.org/ontology#> .\n@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .\n\n[] jsonrpc: \"2.0\" ;\n    jsonrpc:id \"1\" ;\n    jsonrpc:result 19 .\n\n",
          "url": "https://ogcincubator.github.io/modelcontextprotocol/build/tests/json-rpc/example_3_1.ttl"
        }
      ]
    }
  ],
  "annotatedSchema": "$schema: http://json-schema.org/draft-07/schema#\ndefinitions:\n  RequestId:\n    $anchor: RequestId\n    description: A uniquely identifying ID for a request in JSON-RPC.\n    type:\n    - string\n  ProgressToken:\n    $anchor: ProgressToken\n    description: A progress token, used to associate progress notifications with the\n      original request.\n    type:\n    - string\n  Request:\n    $anchor: Request\n    properties:\n      method:\n        type: string\n        x-jsonld-id: http://json-rpc.org/ontology#hasMethod\n        x-jsonld-type: http://www.w3.org/2001/XMLSchema#string\n      params:\n        additionalProperties: {}\n        properties:\n          _meta:\n            additionalProperties: {}\n            description: 'See [General fields: `_meta`](/specification/2025-06-18/basic/index#meta)\n              for notes on `_meta` usage.'\n            properties:\n              progressToken:\n                $ref: '#/definitions/ProgressToken'\n                description: If specified, the caller is requesting out-of-band progress\n                  notifications for this request (as represented by notifications/progress).\n                  The value of this parameter is an opaque token that will be attached\n                  to any subsequent notifications. The receiver is not obligated to\n                  provide these notifications.\n                x-jsonld-id: http://json-rpc.org/ontology#progressToken\n            type: object\n            x-jsonld-id: http://json-rpc.org/ontology#_meta\n        type: object\n        x-jsonld-id: http://json-rpc.org/ontology#hasParameters\n        x-jsonld-type: '@json'\n    required:\n    - method\n    type: object\n  Result:\n    $anchor: Result\n    additionalProperties: {}\n    properties:\n      _meta:\n        additionalProperties: {}\n        description: 'See [General fields: `_meta`](/specification/2025-06-18/basic/index#meta)\n          for notes on `_meta` usage.'\n        type: object\n        x-jsonld-id: http://json-rpc.org/ontology#_meta\n    type: object\n  JSONRPCError:\n    $anchor: JSONRPCError\n    description: A response to a request that indicates an error occurred.\n    properties:\n      error:\n        properties:\n          code:\n            description: The error type that occurred.\n            type: integer\n            x-jsonld-id: http://json-rpc.org/ontology#hasErrorCode\n            x-jsonld-type: http://www.w3.org/2001/XMLSchema#integer\n          data:\n            description: Additional information about the error. The value of this\n              member is defined by the sender (e.g. detailed error information, nested\n              errors etc.).\n            x-jsonld-id: http://json-rpc.org/ontology#hasErrorData\n            x-jsonld-type: '@json'\n          message:\n            description: A short description of the error. The message SHOULD be limited\n              to a concise single sentence.\n            type: string\n            x-jsonld-id: http://json-rpc.org/ontology#hasErrorMessage\n            x-jsonld-type: http://www.w3.org/2001/XMLSchema#string\n        required:\n        - code\n        - message\n        type: object\n        x-jsonld-id: http://json-rpc.org/ontology#hasError\n        x-jsonld-type: '@id'\n      id:\n        $ref: '#/definitions/RequestId'\n        x-jsonld-id: http://json-rpc.org/ontology#hasId\n        x-jsonld-type: '@id'\n      jsonrpc:\n        const: '2.0'\n        type: string\n        x-jsonld-id: http://json-rpc.org/ontology#\n    required:\n    - error\n    - id\n    - jsonrpc\n    type: object\n  JSONRPCMessage:\n    $anchor: JSONRPCMessage\n    anyOf:\n    - $ref: '#/definitions/JSONRPCRequest'\n    - $ref: '#/definitions/JSONRPCNotification'\n    - $ref: '#/definitions/JSONRPCResponse'\n    - $ref: '#/definitions/JSONRPCError'\n    description: Refers to any valid JSON-RPC object that can be decoded off the wire,\n      or encoded to be sent.\n  JSONRPCNotification:\n    $anchor: JSONRPCNotification\n    description: A notification which does not expect a response.\n    properties:\n      jsonrpc:\n        const: '2.0'\n        type: string\n        x-jsonld-id: http://json-rpc.org/ontology#\n      method:\n        type: string\n        x-jsonld-id: http://json-rpc.org/ontology#hasMethod\n        x-jsonld-type: http://www.w3.org/2001/XMLSchema#string\n      params:\n        additionalProperties: {}\n        properties:\n          _meta:\n            additionalProperties: {}\n            description: 'See [General fields: `_meta`](/specification/2025-06-18/basic/index#meta)\n              for notes on `_meta` usage.'\n            type: object\n            x-jsonld-id: http://json-rpc.org/ontology#_meta\n        type: object\n        x-jsonld-id: http://json-rpc.org/ontology#hasParameters\n        x-jsonld-type: '@json'\n    required:\n    - jsonrpc\n    - method\n    type: object\n  JSONRPCRequest:\n    $anchor: JSONRPCRequest\n    description: A request that expects a response.\n    properties:\n      id:\n        $ref: '#/definitions/RequestId'\n        x-jsonld-id: http://json-rpc.org/ontology#hasId\n        x-jsonld-type: '@id'\n      jsonrpc:\n        const: '2.0'\n        type: string\n        x-jsonld-id: http://json-rpc.org/ontology#\n      method:\n        type: string\n        x-jsonld-id: http://json-rpc.org/ontology#hasMethod\n        x-jsonld-type: http://www.w3.org/2001/XMLSchema#string\n      params:\n        additionalProperties: {}\n        properties:\n          _meta:\n            additionalProperties: {}\n            description: 'See [General fields: `_meta`](/specification/2025-06-18/basic/index#meta)\n              for notes on `_meta` usage.'\n            properties:\n              progressToken:\n                $ref: '#/definitions/ProgressToken'\n                description: If specified, the caller is requesting out-of-band progress\n                  notifications for this request (as represented by notifications/progress).\n                  The value of this parameter is an opaque token that will be attached\n                  to any subsequent notifications. The receiver is not obligated to\n                  provide these notifications.\n                x-jsonld-id: http://json-rpc.org/ontology#progressToken\n            type: object\n            x-jsonld-id: http://json-rpc.org/ontology#_meta\n        type: object\n        x-jsonld-id: http://json-rpc.org/ontology#hasParameters\n        x-jsonld-type: '@json'\n    required:\n    - id\n    - jsonrpc\n    - method\n    type: object\n  JSONRPCResponse:\n    $anchor: JSONRPCResponse\n    description: A successful (non-error) response to a request.\n    properties:\n      id:\n        $ref: '#/definitions/RequestId'\n        x-jsonld-id: http://json-rpc.org/ontology#hasId\n        x-jsonld-type: '@id'\n      jsonrpc:\n        const: '2.0'\n        type: string\n        x-jsonld-id: http://json-rpc.org/ontology#\n      result:\n        $ref: '#/definitions/Result'\n        x-jsonld-id: http://json-rpc.org/ontology#hasResult\n        x-jsonld-type: '@json'\n    required:\n    - id\n    - jsonrpc\n    - result\n    type: object\nx-jsonld-extra-terms:\n  Message:\n    x-jsonld-id: http://json-rpc.org/ontology#Message\n    x-jsonld-type: '@id'\n  Request:\n    x-jsonld-id: http://json-rpc.org/ontology#Request\n    x-jsonld-type: '@id'\n  Notification:\n    x-jsonld-id: http://json-rpc.org/ontology#Notification\n    x-jsonld-type: '@id'\n  Response:\n    x-jsonld-id: http://json-rpc.org/ontology#Response\n    x-jsonld-type: '@id'\n  ErrorResponse:\n    x-jsonld-id: http://json-rpc.org/ontology#ErrorResponse\n    x-jsonld-type: '@id'\n  Error:\n    x-jsonld-id: http://json-rpc.org/ontology#Error\n    x-jsonld-type: '@id'\n  RequestId:\n    x-jsonld-id: http://json-rpc.org/ontology#RequestId\n    x-jsonld-type: '@id'\n  StringId:\n    x-jsonld-id: http://json-rpc.org/ontology#StringId\n    x-jsonld-type: '@id'\n  NumberId:\n    x-jsonld-id: http://json-rpc.org/ontology#NumberId\n    x-jsonld-type: '@id'\n  NullId:\n    x-jsonld-id: http://json-rpc.org/ontology#NullId\n    x-jsonld-type: '@id'\n  stringValue:\n    x-jsonld-id: http://json-rpc.org/ontology#hasStringValue\n    x-jsonld-type: http://www.w3.org/2001/XMLSchema#string\n  numberValue:\n    x-jsonld-id: http://json-rpc.org/ontology#hasNumberValue\n    x-jsonld-type: http://www.w3.org/2001/XMLSchema#decimal\n  ParseError:\n    x-jsonld-id: http://json-rpc.org/ontology#ParseError\n    x-jsonld-type: '@id'\n  InvalidRequest:\n    x-jsonld-id: http://json-rpc.org/ontology#InvalidRequest\n    x-jsonld-type: '@id'\n  MethodNotFound:\n    x-jsonld-id: http://json-rpc.org/ontology#MethodNotFound\n    x-jsonld-type: '@id'\n  InvalidParams:\n    x-jsonld-id: http://json-rpc.org/ontology#InvalidParams\n    x-jsonld-type: '@id'\n  InternalError:\n    x-jsonld-id: http://json-rpc.org/ontology#InternalError\n    x-jsonld-type: '@id'\n  ServerError:\n    x-jsonld-id: http://json-rpc.org/ontology#ServerError\n    x-jsonld-type: '@id'\nx-jsonld-base: https://schemas.json-rpc.org/2.0/\nx-jsonld-vocab: http://json-rpc.org/ontology#\nx-jsonld-prefixes:\n  jsonrpc: http://json-rpc.org/ontology#\n  xsd: http://www.w3.org/2001/XMLSchema#\n  rdfs: http://www.w3.org/2000/01/rdf-schema#\n",
  "gitRepository": "https://github.com/ogcincubator/modelcontextprotocol",
  "gitPath": "_sources/json-rpc"
}